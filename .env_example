# Django secret key, example of how to create: https://www.educative.io/answers/how-to-generate-a-django-secretkey
SECRET_KEY=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

# Django superuser password for automatic superuser generation.
# During the first container start, will be created superuser "admin" with email admin@example.com
# with that password:
SUPERUSER_PASSWORD=django_superuser_strong_password

# Postgres database credentials
PG_DATABASE=weather_reminder
PG_USER=db_user
PG_PASSWD=dbuser_strong_password
PG_DATABASE_ADDRESS=127.0.0.1
PG_DATABASE_PORT=5432
# Postgres superuser (postgres) password for the docker DB image creation
POSTGRES_PASSWORD=postgres_admin_user_strong_password

# Redis
REDIS_CREDENTIALS='redis_user:redis_password@'
REDIS_ADDRESS='127.0.0.1'

# Credentials for email sending
EMAIL_USE_TLS=True
EMAIL_HOST=smtp.gmail.com
EMAIL_HOST_USER=example_user@gmail.com
EMAIL_HOST_PASSWORD=XXXXXXXXXXXXXXXX
EMAIL_PORT=587

# credentials for google authentication,
# please see: https://django-allauth.readthedocs.io/en/latest/providers.html#google
GOOGLE_CLIENT_ID=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
GOOGLE_SECRET=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

# OpenWeather API key, please see https://openweathermap.org/api
OPENWEATHER_API_KEY=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

# The URLs of the application in production. You must enter your real application URLs here, separated by commas.
APPLICATION_URLS=weather-reminder.net,192.168.1.1
