# Generated by Django 4.1.4 on 2022-12-13 20:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='City name')),
                ('country_code', models.CharField(help_text='ISO 3166-1 alpha-2 country code', max_length=2, verbose_name='Country code')),
                ('latitude', models.DecimalField(decimal_places=4, help_text='Geographical coordinates (latitude)', max_digits=7, verbose_name='Latitude')),
                ('longitude', models.DecimalField(decimal_places=4, help_text='Geographical coordinates (longitude)', max_digits=7, verbose_name='Longitude')),
                ('timezone', models.IntegerField(help_text='Shift in seconds from UTC', verbose_name='Timezone shift')),
            ],
            options={
                'verbose_name_plural': 'Cities',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='LastUpdateTime',
            fields=[
                ('key', models.CharField(default='-', max_length=1, primary_key=True, serialize=False)),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Last update time')),
            ],
            options={
                'verbose_name_plural': 'Last update time',
            },
        ),
        migrations.CreateModel(
            name='WeatherForecast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(help_text='Time of data forecasted, UTC', verbose_name='Forecast date and time')),
                ('temperature', models.DecimalField(decimal_places=1, help_text='Temperature in Celsius', max_digits=5, verbose_name='Temperature')),
                ('temperature_feels_like', models.DecimalField(decimal_places=1, help_text='Temperature in Celsius for the human perception of weather', max_digits=5, verbose_name='Temperature feels like')),
                ('pressure', models.DecimalField(decimal_places=0, help_text='Atmospheric pressure on the ground level, hPa', max_digits=4, verbose_name='Atmospheric pressure')),
                ('humidity', models.DecimalField(decimal_places=0, help_text='Humidity, %', max_digits=3, verbose_name='Humidity')),
                ('pop', models.DecimalField(decimal_places=0, help_text='Probability of precipitation, %', max_digits=3, verbose_name='Probability of precipitation')),
                ('cloudiness', models.DecimalField(decimal_places=0, help_text='Cloudiness, %', max_digits=3, verbose_name='Cloudiness')),
                ('wind_speed', models.DecimalField(decimal_places=1, help_text='Wind speed, meter/sec', max_digits=5, verbose_name='Wind speed')),
                ('weather_description', models.CharField(blank=True, help_text='Weather conditions description (Rain, Snow, Extreme etc.)', max_length=150, verbose_name='Weather conditions')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weather_forecasts', to='weather_reminder.city', verbose_name='City')),
            ],
            options={
                'verbose_name_plural': 'Weather forecast',
                'ordering': ['datetime'],
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_frequency', models.PositiveSmallIntegerField(help_text='Notification frequency, in hours', verbose_name='Notification frequency')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscribed_users', to='weather_reminder.city')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscribed_cities', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddConstraint(
            model_name='city',
            constraint=models.UniqueConstraint(fields=('latitude', 'longitude'), name='unique_coordinates'),
        ),
        migrations.AddConstraint(
            model_name='weatherforecast',
            constraint=models.UniqueConstraint(fields=('city', 'datetime'), name='unique_forecast'),
        ),
        migrations.AddConstraint(
            model_name='subscription',
            constraint=models.UniqueConstraint(fields=('user', 'city'), name='unique_subscribe'),
        ),
    ]
